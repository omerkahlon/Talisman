package com.example.mytal;
import android.view.inputmethod.InsertGesture;

import java.util.ArrayList;
import java.lang.reflect.Array;

public class Player {
    protected String Name;
    public Integer StrengthPoints;
    public final int Min_StrengthPoints;
    public Integer SkillPoints;
    public final int Min_SkillPoints;
    public Integer Curr_lifePoints;
    public final int Start_lifePoints;
    public Integer Curr_Gold;
    public Integer Tendency; //0 - bad, 1 - neutral, 2 - good
    public final Tile StartTile;
    public Tile CurrTile;
    private Spell[] Spells = new Spell[3];
    private ArrayList<Escort> Escorts = new ArrayList<Escort>();
    private final Integer Start_with_Spell;
    private final Integer UseWeapon;
    private Item[] Items = new Item[4];
    private ArrayList<Enemy> Loot = new ArrayList<Enemy>();
    private final Boolean UseArmor;
    public Player(Integer Min_Strength,Integer Min_Skill,Integer LifePoints,Tile Tile, Spell[] spells, Integer StartMagic, Integer Weapon, boolean UseArmor)
    {
        this.Min_StrengthPoints = Min_Strength;
        this.Min_SkillPoints = Min_Skill;
        this.Start_lifePoints = LifePoints;
        this.StartTile = Tile;
        this.CurrTile = Tile;
        this.Start_with_Spell = StartMagic;
        this.UseWeapon = Weapon;
        this.UseArmor = UseArmor;
    }
    public Integer GetStrengthPoints()
    {
        return this.StrengthPoints;
    }
    public Integer GetMinStrengthPoints()
    {
        return this.Min_StrengthPoints;
    }
    public Integer GetSkillPoints()
    {
        return this.SkillPoints;
    }
    public Integer GetMinSkillPoints()
    {
        return this.Min_SkillPoints;
    }
    public Integer GetLifePoints()
    {
        return this.Curr_lifePoints;
    }
    public Integer GetStartLifePoints()
    {
        return this.Start_lifePoints;
    }
    public Integer GetCurrGold()
    {
        return this.Curr_Gold;
    }
    public Integer GetTendency()
    {
        return this.Tendency;
    }
    public Tile GetStartTile()
    {
        return this.StartTile;
    }
    public Tile GetCurrTile()
    {
        return this.CurrTile;
    }
    public Spell[] GetSpells()
    {
        return this.Spells;
    }
    public ArrayList<Escort> GetEscorts()
    {
        return this.Escorts;
    }
    public Item[] GetItems()
    {
        return this.Items;
    }
    public ArrayList<Enemy> GetLoot()
    {
        return this.Loot;
    }
    public Integer GetStartWithSpell()
    {
        return this.Start_with_Spell;
    }
    public Integer GetUseWeapon()
    {
        return this.UseWeapon;
    }
    public Boolean GetUseArmor()
    {
        return this.UseArmor;
    }
    public boolean setStrengthPoints(int newStrength)
    {
        if (newStrength >= this.Min_StrengthPoints)
        {
            this.StrengthPoints = newStrength;
            return true; // Strength points successfully updated
        }
        else
        {
            return false; // Can't set Strength points below the minimum value
        }
    }
    public Boolean SetSkillPoints(Integer NewSkill)
    {
        if (NewSkill >= this.Min_SkillPoints)
        {
            this.SkillPoints = NewSkill;
            return true; //Skill Points successfully updated
        }
        else
        {
            return false; // Can't set Skill points below the minimum value
        }
    }
    public void SetLifePoints(Integer NewLife)
    {
        this.Curr_lifePoints = NewLife;
    }
    public void SetCurrGold(Integer NewGold)
    {
        if (NewGold >= 0)
        {
            this.Curr_Gold = NewGold;
        }
    }
    public String GetName()
    {
        return this.Name;
    }
}
